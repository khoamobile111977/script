-- Auto Pull Lever Script
-- Automatically pulls lever and searches for Mirage Island

-- Configuration
getgenv().AutoPullLever = true -- Bật/tắt tính năng auto pull lever
getgenv().TweenSpeed = 300 -- Tốc độ di chuyển

-- Variables
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local RunService = game:GetService("RunService")
local localPlayer = Players.LocalPlayer

local IsTweening = false
local ApiUrl = "https://web-production-a0a2e.up.railway.app/mirageisland?key=khoadeptrai"
local Doorsau = CFrame.new(28576.4688, 14935.9512, 75.469101, -1, -4.22219593e-08, 1.13133396e-08, 0, -0.258819044, -0.965925813, 4.37113883e-08, -0.965925813, 0.258819044)
local Door2 = 0.2

-- Functions
function ToTarget(Pos)
    if not localPlayer.Character or not localPlayer.Character:FindFirstChild("HumanoidRootPart") or 
       not localPlayer.Character:FindFirstChild("Humanoid") or 
       localPlayer.Character.Humanoid.Health <= 0 then
        print("Nhân vật đã chết, đang đợi hồi sinh...")
        wait(5) -- Wait for respawn
        return
    end
    
    -- Check again
    if localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") and 
       localPlayer.Character:FindFirstChild("Humanoid") and 
       localPlayer.Character.Humanoid.Health > 0 then
        
        -- Calculate distance
        local Distance = (Pos.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
        
        -- Make sure character is not sitting
        if localPlayer.Character.Humanoid.Sit == true then
            localPlayer.Character.Humanoid.Sit = false
        end
        
        -- Create tween
        local Tween
        pcall(function()
            Tween = TweenService:Create(
                localPlayer.Character.HumanoidRootPart,
                TweenInfo.new(Distance / getgenv().TweenSpeed, Enum.EasingStyle.Linear),
                {CFrame = Pos}
            )
        end)
        
        -- Start tween
        IsTweening = true
        Tween:Play()
        
        -- Wait for tween to complete
        Tween.Completed:Connect(function()
            IsTweening = false
        end)
        
        -- Teleport if close enough
        if Distance <= 370 then
            if Tween then Tween:Cancel() end
            localPlayer.Character.HumanoidRootPart.CFrame = Pos
            IsTweening = false
        end
    else
        print("Nhân vật chưa sẵn sàng để di chuyển")
    end
end

function GetGameTime()
    local ClockTime = game.Lighting.ClockTime
    if ClockTime >= 18 or ClockTime < 5 then
        return "Night"
    else
        return "Day"
    end
end

function GetBlueGear()
    if game.workspace.Map:FindFirstChild("MysticIsland") then
        for _, v in pairs(game.workspace.Map.MysticIsland:GetChildren()) do
            if v:IsA("MeshPart") and v.MeshId == "rbxassetid://10153114969" then
                return v
            end
        end
    end
    return nil
end

function GetHighestPoint()
    if not game.workspace.Map:FindFirstChild("MysticIsland") then
        return nil
    end
    for _, v in pairs(game:GetService("Workspace").Map.MysticIsland:GetDescendants()) do
        if v:IsA("MeshPart") and v.MeshId == "rbxassetid://6745037796" then
            return v
        end
    end
    return nil
end

function CollectBlueGear()
    local BlueGear = GetBlueGear()
    if BlueGear and not BlueGear.CanCollide and BlueGear.Transparency ~= 1 then
        ToTarget(CFrame.new(BlueGear.Position))
    elseif BlueGear and BlueGear.Transparency == 1 then
        local HighestPoint = GetHighestPoint()
        if HighestPoint then
            if (HighestPoint.CFrame * CFrame.new(0, 211.88, 0).Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude > 10 then 
                ToTarget(HighestPoint.CFrame * CFrame.new(0, 211.88, 0))
            else
                workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, game:GetService("Lighting"):GetMoonDirection() + workspace.CurrentCamera.CFrame.Position)
                task.wait(0.1)
                game:service("VirtualInputManager"):SendKeyEvent(true, "T", false, game)
                task.wait()
                game:service("VirtualInputManager"):SendKeyEvent(false, "T", false, game)
                task.wait(1.5)
            end
        end
    end
end

function FetchMirageServers()
    local success, result = pcall(function()
        local response = game:HttpGet(ApiUrl)
        return HttpService:JSONDecode(response)
    end)
    
    if success and result and result.status == "true" and result.List and #result.List > 0 then
        print("Đã tìm thấy " .. #result.List .. " server có Mirage Island")
        return result.List
    else
        print("Không thể tìm thấy server có Mirage Island hoặc lỗi API")
        return {}
    end
end

function JoinMirageServer()
    local servers = FetchMirageServers()
    if #servers > 0 then
        print("Đang tham gia server có Mirage Island...")
        
        for _, jobId in ipairs(servers) do
            pcall(function()
                TeleportService:TeleportToPlaceInstance(game.PlaceId, jobId)
                task.wait(3)
            end)
        end
    else
        print("Không tìm thấy server nào có Mirage Island, sẽ thử lại sau...")
        task.wait(10)
    end
end

function PullLever()
    if not ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("CheckTempleDoor") then 
        if game:GetService("Workspace").Map:FindFirstChild("MysticIsland") and GetGameTime() == "Night" then
            local raceProgress = ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress", "Check")
            if raceProgress == 1 then
                ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress", "Begin")
            elseif raceProgress == 2 then
                ToTarget(CFrame.new(2956.78, 2281.85, -7217.63))
                if (CFrame.new(2956.78, 2281.85, -7217.63).Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude < 8 then 
                    local args = {
                        [1] = "RaceV4Progress",
                        [2] = "Teleport"
                    }
                    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
                end
            elseif raceProgress == 3 then
                ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress", "Continue")
            else
                CollectBlueGear()
            end
        elseif game:GetService("Workspace").Map:FindFirstChild("MysticIsland") and GetGameTime() ~= "Night" then 
            print("Đang đợi tới đêm...")
            task.wait(5)
        elseif not game:GetService("Workspace").Map:FindFirstChild("MysticIsland") then 
            print("Không tìm thấy Mirage Island trong server này, đang tìm server khác...")
            JoinMirageServer()
        end
    else
        local lever = game:GetService("Workspace").Map["Temple of Time"].Lever
        if lever.Lever.CFrame.Z > Doorsau.Z + Door2 or lever.Lever.CFrame.Z < Doorsau.Z - Door2 then 
            if (localPlayer.Character.HumanoidRootPart.Position - lever.Part.Position).Magnitude > 10 then
                ToTarget(lever.Part.CFrame)
            else
                fireproximityprompt(lever.Prompt.ProximityPrompt, 1)
            end
        else
            print("Đã kéo cần thành công!")
            getgenv().AutoPullLever = false
        end
    end
end

-- Main Loop
spawn(function()
    while true do
        if getgenv().AutoPullLever then
            pcall(function()
                PullLever()
            end)
        end
        task.wait(1)
    end
end)

-- Notifications
print("Auto Pull Lever đã được kích hoạt!")
