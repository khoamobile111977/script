-- Load Fluent UI Library
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Create main window
local Window = Fluent:CreateWindow({
    Title = "Boss Farm - Captain Elephant",
    SubTitle = "by Captain Elephant Farm",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Variables
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local farmEnabled = false
local fastAttackEnabled = false
local bringMobEnabled = false
local hoverEnabled = true  -- Variable for hovering above boss
local hoverHeight = 30     -- Height to hover above boss
local attackRange = 60     -- Attack range variable

-- Create tabs
local FarmTab = Window:CreateTab("Farm", "rbxassetid://6026568229")
local SettingsTab = Window:CreateTab("Settings", "rbxassetid://6031280882")

-- Function to equip Sharkman Karate
local function equipWeapon()
    local backpack = player.Backpack
    local weapon = backpack:FindFirstChild("Sharkman Karate")
    
    if weapon then
        character.Humanoid:EquipTool(weapon)
        return true
    else
        if character:FindFirstChild("Sharkman Karate") then
            return true
        end
        return false
    end
end

-- Tween function
local function tweenTo(destination, speed)
    if not speed then speed = 350 end
    
    local hrp = character:WaitForChild("HumanoidRootPart")
    local distance = (destination - hrp.Position).Magnitude
    local tweenService = game:GetService("TweenService")
    local info = TweenInfo.new(distance/speed, Enum.EasingStyle.Linear)
    
    local tween = tweenService:Create(hrp, info, {CFrame = CFrame.new(destination)})
    tween:Play()
    return tween
end

-- Enhanced tween function that can use CFrame directly
local function tweenToCFrame(targetCFrame, speed)
    if not speed then speed = 350 end
    
    local hrp = character:WaitForChild("HumanoidRootPart")
    local distance = (targetCFrame.Position - hrp.Position).Magnitude
    local tweenService = game:GetService("TweenService")
    local info = TweenInfo.new(distance/speed, Enum.EasingStyle.Linear)
    
    local tween = tweenService:Create(hrp, info, {CFrame = targetCFrame})
    tween:Play()
    return tween
end

-- Fast Attack function
function AttackNoCoolDown()
    local character = player.Character
    if not character then return end
    
    local equippedWeapon = nil
    for _, item in ipairs(character:GetChildren()) do
        if item:IsA("Tool") then
            equippedWeapon = item
            break
        end
    end
    
    if not equippedWeapon then return end
    
    local function IsEntityAlive(entity)
        return entity and entity:FindFirstChild("Humanoid") and entity.Humanoid.Health > 0
    end
    
    local function GetEnemiesInRange(range)
        local enemies = game:GetService("Workspace").Enemies:GetChildren()
        local targets = {}
        local playerPos = character:GetPivot().Position
        
        for _, enemy in ipairs(enemies) do
            local primaryPart = enemy:FindFirstChild("HumanoidRootPart")
            if primaryPart and IsEntityAlive(enemy) and (primaryPart.Position - playerPos).Magnitude <= range then
                table.insert(targets, enemy)
            end
        end
        
        return targets
    end
    
    if equippedWeapon:FindFirstChild("LeftClickRemote") then
        local attackCount = 1  
        local enemiesInRange = GetEnemiesInRange(attackRange)
        
        for _, enemy in ipairs(enemiesInRange) do
            local direction = (enemy.HumanoidRootPart.Position - character:GetPivot().Position).Unit
            pcall(function()
                equippedWeapon.LeftClickRemote:FireServer(direction, attackCount)
            end)
            attackCount = attackCount + 1
            if attackCount > 1000000000 then attackCount = 1 end
        end
    else
        local targets = {}
        local enemies = game:GetService("Workspace").Enemies:GetChildren()
        local playerPos = character:GetPivot().Position
        local mainTarget = nil
        
        for _, enemy in ipairs(enemies) do
            if not enemy:GetAttribute("IsBoat") and IsEntityAlive(enemy) then
                local head = enemy:FindFirstChild("Head")
                if head and (playerPos - head.Position).Magnitude <= attackRange then
                    table.insert(targets, { enemy, head })
                    mainTarget = head
                end
            end
        end
        
        if not mainTarget then return end
        
        pcall(function()
            local storage = game:GetService("ReplicatedStorage")
            local attackEvent = storage:WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterAttack")
            local hitEvent = storage:WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterHit")
            
            if #targets > 0 then
                attackEvent:FireServer(0.000000001)
                hitEvent:FireServer(mainTarget, targets)
            else
                task.wait(0.000000001)
            end
        end)
    end
end

-- Bring Mob function
local function GetMobPosition(EnemiesName)
    local pos
    local count = 0
    
    for _, v in pairs(workspace.Enemies:GetChildren()) do
        if v.Name == EnemiesName then
            if not pos then
                pos = v.HumanoidRootPart.Position
            else
                pos = pos + v.HumanoidRootPart.Position
            end
            count = count + 1
        end
    end
    
    if count > 0 then
        pos = pos / count
        return pos
    end
    return nil
end

local function TweenObject(Object, Pos, Speed)
    if Speed == nil then Speed = 350 end
    local Distance = (Pos.Position - Object.Position).Magnitude
    local tweenService = game:GetService("TweenService")
    local info = TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear)
    local tween = tweenService:Create(Object, info, {CFrame = Pos})
    tween:Play()
    return tween
end

local function BringMob()
    local ememe = game.Workspace.Enemies:GetChildren()
    if #ememe > 0 then
        local totalpos = {}
        for _, v in pairs(ememe) do
            if not totalpos[v.Name] then
                local pos = GetMobPosition(v.Name)
                if pos then
                    totalpos[v.Name] = pos
                end
            end
        end
        
        for _, v in pairs(workspace.Enemies:GetChildren()) do
            if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") then
                if (v.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude <= 350 then
                    for k, f in pairs(totalpos) do
                        if k and v.Name == k and f then
                            local targetCFrame = CFrame.new(f.X, f.Y, f.Z)
                            local distance = (v.HumanoidRootPart.Position - targetCFrame.Position).Magnitude
                            
                            if distance > 3 and distance <= 280 then
                                TweenObject(v.HumanoidRootPart, targetCFrame, 300)
                                v.HumanoidRootPart.CanCollide = false
                                v.Humanoid.WalkSpeed = 0
                                v.Humanoid.JumpPower = 0
                                v.Humanoid:ChangeState(14)
                                sethiddenproperty(player, "SimulationRadius", math.huge)
                            end
                        end
                    end
                end
            end
        end
    end
end

-- Function to find the boss
local function findBoss()
    -- First check if boss exists in the current workspace
    for _, v in pairs(workspace.Enemies:GetChildren()) do
        if v.Name == "Captain Elephant" and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            return v, "workspace"
        end
    end
    
    -- If not in workspace, check in ReplicatedStorage
    local repStorage = game:GetService("ReplicatedStorage")
    local possibleLocations = {
        repStorage,
        repStorage:FindFirstChild("Enemies") or Instance.new("Folder"),
        repStorage:FindFirstChild("NPCs") or Instance.new("Folder")
    }
    
    for _, location in pairs(possibleLocations) do
        for _, v in pairs(location:GetChildren()) do
            if v.Name == "Captain Elephant" then
                return v, "replicated"
            end
        end
    end
    
    return nil
end

-- New function to position character above boss's head
local function positionAboveBoss(boss)
    if not boss or not boss:FindFirstChild("HumanoidRootPart") then return end
    
    -- Get boss position
    local bossPosition = boss.HumanoidRootPart.Position
    
    -- Create a position above the boss
    local abovePosition = Vector3.new(
        bossPosition.X, 
        bossPosition.Y + hoverHeight, 
        bossPosition.Z
    )
    
    -- Create a CFrame that faces the boss while hovering
    local lookDirection = (bossPosition - abovePosition).Unit
    local targetCFrame = CFrame.new(abovePosition, bossPosition)
    
    -- Move to position above boss
    local distance = (abovePosition - hrp.Position).Magnitude
    
    -- If already close to desired position, just set CFrame directly
    if distance < 5 then
        hrp.CFrame = targetCFrame
    else
        -- Otherwise use tween for smoother movement
        tweenToCFrame(targetCFrame, 200)
    end
    
    return distance
end

-- Improved farm function to fix stuttering issues
local function farmBoss()
    local hoverUpdateInterval = 0.3
    local currentTween = nil
    local isTweening = false
    local bossWasFound = false
    
    -- Function to cancel current tween if it exists
    local function cancelCurrentTween()
        if currentTween then
            currentTween:Cancel()
            currentTween = nil
            isTweening = false
        end
    end
    
    while farmEnabled do
        local boss, location = findBoss()
        
        -- If boss is found in workspace
        if boss and location == "workspace" then
            -- If currently tweening to spawn, cancel it immediately
            if isTweening then
                cancelCurrentTween()
            end
            
            bossWasFound = true
            
            if boss:FindFirstChild("HumanoidRootPart") then
                -- Ensure weapon is equipped
                if not character:FindFirstChildOfClass("Tool") then
                    if not equipWeapon() then
                        Fluent:Notify({
                            Title = "Weapon Not Found",
                            Content = "Sharkman Karate not found in backpack",
                            Duration = 5
                        })
                        wait(1)
                        continue
                    end
                end
                
                -- Update position relative to boss
                if hoverEnabled then
                    -- Get boss position
                    local bossPosition = boss.HumanoidRootPart.Position
                    
                    -- Create position above boss
                    local abovePosition = Vector3.new(
                        bossPosition.X, 
                        bossPosition.Y + hoverHeight, 
                        bossPosition.Z
                    )
                    
                    -- Create CFrame facing down at boss
                    local targetCFrame = CFrame.new(abovePosition, bossPosition)
                    
                    -- Check distance
                    local distance = (abovePosition - hrp.Position).Magnitude
                    
                    -- If already close, just update CFrame directly
                    if distance < 5 then
                        hrp.CFrame = targetCFrame
                    else
                        -- Tween to new position
                        hrp.CFrame = CFrame.new(hrp.Position, bossPosition) -- Face boss immediately
                        tweenToCFrame(targetCFrame, 150)
                    end
                else
                    -- Move to boss position normally
                    local bossPosition = boss.HumanoidRootPart.Position
                    if (bossPosition - hrp.Position).Magnitude > 10 then
                        tweenTo(bossPosition, 150)
                    end
                end
                
                -- Perform attacks and bring mobs
                if fastAttackEnabled then
                    AttackNoCoolDown()
                end
                
                if bringMobEnabled then
                    BringMob()
                end
                
                -- Short wait before continuing loop
                wait(hoverUpdateInterval)
            end
        else
            -- If boss was previously found, wait to confirm it's really gone
            if bossWasFound then
                wait(2)
                -- Recheck if boss is still gone
                local recheckBoss, recheckLocation = findBoss()
                if recheckBoss and recheckLocation == "workspace" then
                    continue -- Boss still exists, continue main loop
                end
                -- If boss is really gone, reset tracking variable
                bossWasFound = false
            end
            
            -- If boss not found or in ReplicatedStorage
            -- And not currently tweening to spawn
            if not isTweening then
                local spawnPosition = Vector3.new(-13365.529296875, 321.2309875488281, -8484.990234375)
                
                -- Only teleport if not near spawn area
                if (spawnPosition - hrp.Position).Magnitude > 20 then
                    Fluent:Notify({
                        Title = "Waiting for Boss",
                        Content = "Moving to Captain Elephant spawn location",
                        Duration = 3
                    })
                    
                    isTweening = true
                    currentTween = tweenTo(spawnPosition, 200)
                    
                    -- Wait while tweening but continuously check if boss appears
                    local startTime = tick()
                    local maxWaitTime = 10 -- Max time to wait for tween (seconds)
                    
                    while isTweening and tick() - startTime < maxWaitTime and farmEnabled do
                        -- Check if boss has appeared
                        local checkBoss, checkLocation = findBoss()
                        if checkBoss and checkLocation == "workspace" then
                            -- If boss appears, cancel current tween and return to main loop
                            cancelCurrentTween()
                            break
                        end
                        
                        -- Check if we've arrived
                        if (spawnPosition - hrp.Position).Magnitude < 20 then
                            isTweening = false
                            break
                        end
                        
                        wait(0.5) -- Wait a bit before checking again
                    end
                    
                    -- If tween completed or max time reached
                    isTweening = false
                end
            end
            
            -- Wait before checking again
            wait(1)
        end
    end
end

-- Farm toggle
local farmToggle = FarmTab:CreateToggle({
    Title = "Farm Captain Elephant",
    Default = false,
    Callback = function(Value)
        farmEnabled = Value
        
        if Value then
            Fluent:Notify({
                Title = "Farm Enabled",
                Content = "Starting to farm Captain Elephant",
                Duration = 5
            })
            
            task.spawn(farmBoss)
        else
            Fluent:Notify({
                Title = "Farm Disabled",
                Content = "Stopped farming Captain Elephant",
                Duration = 5
            })
        end
    end
})

-- Fast Attack toggle
local fastAttackToggle = FarmTab:CreateToggle({
    Title = "Fast Attack",
    Default = true,
    Callback = function(Value)
        fastAttackEnabled = Value
        
        if Value then
            Fluent:Notify({
                Title = "Fast Attack",
                Content = "Fast Attack enabled",
                Duration = 3
            })
        else
            Fluent:Notify({
                Title = "Fast Attack",
                Content = "Fast Attack disabled",
                Duration = 3
            })
        end
    end
})

-- Bring Mob toggle
local bringMobToggle = FarmTab:CreateToggle({
    Title = "Bring Mob",
    Default = true,
    Callback = function(Value)
        bringMobEnabled = Value
        
        if Value then
            Fluent:Notify({
                Title = "Bring Mob",
                Content = "Bring Mob enabled",
                Duration = 3
            })
        else
            Fluent:Notify({
                Title = "Bring Mob",
                Content = "Bring Mob disabled",
                Duration = 3
            })
        end
    end
})

-- Hover above boss toggle
local hoverToggle = FarmTab:CreateToggle({
    Title = "Hover Above Boss",
    Default = true,
    Callback = function(Value)
        hoverEnabled = Value
        
        if Value then
            Fluent:Notify({
                Title = "Hover Enabled",
                Content = "Will position above boss's head during farm",
                Duration = 3
            })
        else
            Fluent:Notify({
                Title = "Hover Disabled",
                Content = "Regular positioning enabled",
                Duration = 3
            })
        end
    end
})

-- Hover height slider
local hoverSlider = FarmTab:CreateSlider({
    Title = "Hover Height",
    Default = 30,
    Min = 10,
    Max = 50,
    Callback = function(Value)
        hoverHeight = Value
    end
})

-- Teleport button
FarmTab:CreateButton({
    Title = "Teleport to Captain Elephant",
    Callback = function()
        local boss, location = findBoss()
        
        if boss and location == "workspace" and boss:FindFirstChild("HumanoidRootPart") then
            if hoverEnabled then
                -- Position above boss head
                local bossPosition = boss.HumanoidRootPart.Position
                local abovePosition = Vector3.new(
                    bossPosition.X, 
                    bossPosition.Y + hoverHeight, 
                    bossPosition.Z
                )
                tweenTo(abovePosition, 200)
            else
                -- Regular teleport
                tweenTo(boss.HumanoidRootPart.Position, 200)
            end
            
            Fluent:Notify({
                Title = "Teleporting",
                Content = "Teleporting to Captain Elephant",
                Duration = 3
            })
        elseif location == "replicated" then
            -- Known spawn location for Captain Elephant
            local spawnPosition = Vector3.new(-13365.529296875, 321.2309875488281, -8484.990234375)
            
            tweenTo(spawnPosition, 200)
            Fluent:Notify({
                Title = "Teleporting",
                Content = "Teleporting to Captain Elephant spawn area",
                Duration = 3
            })
        else
            Fluent:Notify({
                Title = "Boss Not Found",
                Content = "Captain Elephant not found in workspace or ReplicatedStorage",
                Duration = 5
            })
        end
    end
})

-- Attack range slider
local rangeSlider = SettingsTab:CreateSlider({
    Title = "Attack Range",
    Default = 60,
    Min = 10,
    Max = 100,
    Callback = function(Value)
        attackRange = Value
    end
})

-- Section for theme settings
local ThemeSection = SettingsTab:CreateSection("UI Settings")

-- Theme picker
local ThemePicker = SettingsTab:CreateDropdown({
    Title = "Theme",
    Values = {"Dark", "Light", "Discord", "Aqua", "Rose"},
    Multi = false,
    Default = 1,
    Callback = function(Value)
        Window:ChangeTheme(Value)
    end
})

-- Initialize and show window
Window:SelectTab(1)

-- Clean up
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    hrp = character:WaitForChild("HumanoidRootPart")
})

-- Notification on load
Fluent:Notify({
    Title = "Script Loaded",
    Content = "Captain Elephant Farm is ready to use",
    Duration = 5
})
