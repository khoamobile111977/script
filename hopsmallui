repeat wait() until game:IsLoaded()
repeat wait() until game.Players and game.Players.LocalPlayer

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Cấu hình
local WEBHOOK_URL = "https://discord.com/api/webhooks/1425902530012905566/4680xvhQ5RF7STymyHMiItM9h6Wt6FIZ41zExZdUnLZ4jqOyCgYIKDaBGcpEUR2CmJPl"

local BOSSES = {
    "Stone [Lv. 1550] [Boss]",
    "Hydra Leader [Lv. 1675] [Boss]",
    "Kilo Admiral [Lv. 1750] [Boss]",
    "Captain Elephant [Lv. 1875] [Boss]",
    "Beautiful Pirate [Lv. 1950] [Boss]"
}

local notifiedBosses = {}

-- Gửi webhook Discord
local function sendWebhook(bossName)
    local jobId = game.JobId
    print("[Boss Tracker] Đang gửi webhook cho:", bossName)
    
    local data = {
        ["content"] = string.format("🔔 **Boss Spawn Alert!**\n\n**Boss:** %s\n**Server ID:** ```%s```", 
            bossName, 
            jobId
        ),
        ["username"] = "Boss Tracker"
    }
    
    local success, response = pcall(function()
        return request({
            Url = WEBHOOK_URL,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode(data)
        })
    end)
    
    if success then
        print("[Boss Tracker] ✓ Webhook gửi thành công!")
    else
        warn("[Boss Tracker] ❌ Lỗi gửi webhook:", response)
    end
end

-- Kiểm tra boss có spawn không
local function checkBossSpawned(bossFolder, bossName)
    print("[Boss Tracker] Checking boss folder:", bossName)
    print("[Boss Tracker] Children count:", #bossFolder:GetChildren())
    
    -- In ra tất cả children để debug
    for i, child in ipairs(bossFolder:GetChildren()) do
        print("[Boss Tracker] Child " .. i .. ":", child.Name, child.ClassName)
    end
    
    -- Nếu folder có bất kỳ children nào = boss đã spawn
    local hasChildren = #bossFolder:GetChildren() > 0
    
    if hasChildren then
        if not notifiedBosses[bossName] then
            notifiedBosses[bossName] = true
            print("[Boss Tracker] ✓ Phát hiện boss:", bossName)
            print("[Boss Tracker] Đang gửi webhook...")
            sendWebhook(bossName)
            
            -- Theo dõi khi children bị xóa = boss chết
            local connection
            connection = bossFolder.ChildRemoved:Connect(function()
                if #bossFolder:GetChildren() == 0 then
                    notifiedBosses[bossName] = nil
                    print("[Boss Tracker] Boss đã chết:", bossName)
                    connection:Disconnect()
                end
            end)
        else
            print("[Boss Tracker] Boss đã được thông báo trước đó:", bossName)
        end
        return true
    else
        print("[Boss Tracker] Folder trống, boss chưa spawn:", bossName)
    end
    return false
end

-- Setup listener cho boss folder
local function setupBossListener(bossFolder, bossName)
    print("[Boss Tracker] ✓ Đang theo dõi:", bossName)
    
    local initialCheckDuration = 60 -- 60 giây = 1 phút
    local checkInterval = 5 -- Check mỗi 5 giây
    local startTime = tick()
    local initialCheckActive = true
    
    -- Lặp check trong 1 phút đầu
    task.spawn(function()
        while initialCheckActive do
            local elapsed = tick() - startTime
            if elapsed >= initialCheckDuration then
                initialCheckActive = false
                print("[Boss Tracker] Kết thúc giai đoạn check ban đầu cho:", bossName)
                break
            end
            
            checkBossSpawned(bossFolder, bossName)
            task.wait(checkInterval)
        end
    end)
    
    -- Event listener cho boss spawn mới (hoạt động song song)
    bossFolder.ChildAdded:Connect(function(child)
        print("[Boss Tracker] ChildAdded event - Boss spawn:", bossName)
        task.wait(0.1)
        checkBossSpawned(bossFolder, bossName)
    end)
end

-- Khởi tạo boss tracker
local function initBossTracker()
    local enemySpawns = workspace:WaitForChild("_WorldOrigin", 10)
    if not enemySpawns then 
        warn("[Boss Tracker] Không tìm thấy _WorldOrigin")
        return
    end
    
    enemySpawns = enemySpawns:WaitForChild("EnemySpawns", 10)
    if not enemySpawns then 
        warn("[Boss Tracker] Không tìm thấy EnemySpawns")
        return
    end
    
    for _, bossName in ipairs(BOSSES) do
        local bossFolder = enemySpawns:FindFirstChild(bossName)
        if bossFolder then
            setupBossListener(bossFolder, bossName)
        else
            warn("[Boss Tracker] Không tìm thấy boss folder:", bossName)
        end
    end
end

-- GUI Code
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ServerHopperGui"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 200, 0, 80)
mainFrame.Position = UDim2.new(0, 10, 0, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = mainFrame

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 22)
title.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
title.BorderSizePixel = 0
title.Text = "🌊 Elite Hopper"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 11
title.Font = Enum.Font.GothamBold
title.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = title

local jobIdInput = Instance.new("TextBox")
jobIdInput.Size = UDim2.new(0, 120, 0, 20)
jobIdInput.Position = UDim2.new(0, 5, 0, 27)
jobIdInput.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
jobIdInput.BorderSizePixel = 0
jobIdInput.Text = ""
jobIdInput.PlaceholderText = "Job ID..."
jobIdInput.TextColor3 = Color3.fromRGB(255, 255, 255)
jobIdInput.TextSize = 10
jobIdInput.Font = Enum.Font.Gotham
jobIdInput.Parent = mainFrame

local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 4)
inputCorner.Parent = jobIdInput

local copyBtn = Instance.new("TextButton")
copyBtn.Size = UDim2.new(0, 30, 0, 20)
copyBtn.Position = UDim2.new(0, 130, 0, 27)
copyBtn.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
copyBtn.BorderSizePixel = 0
copyBtn.Text = "📋"
copyBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
copyBtn.TextSize = 12
copyBtn.Font = Enum.Font.GothamBold
copyBtn.Parent = mainFrame

local copyCorner = Instance.new("UICorner")
copyCorner.CornerRadius = UDim.new(0, 4)
copyCorner.Parent = copyBtn

local clearBtn = Instance.new("TextButton")
clearBtn.Size = UDim2.new(0, 30, 0, 20)
clearBtn.Position = UDim2.new(0, 165, 0, 27)
clearBtn.BackgroundColor3 = Color3.fromRGB(255, 69, 0)
clearBtn.BorderSizePixel = 0
clearBtn.Text = "✕"
clearBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
clearBtn.TextSize = 12
clearBtn.Font = Enum.Font.GothamBold
clearBtn.Parent = mainFrame

local clearCorner = Instance.new("UICorner")
clearCorner.CornerRadius = UDim.new(0, 4)
clearCorner.Parent = clearBtn

local hopBtn = Instance.new("TextButton")
hopBtn.Size = UDim2.new(0, 95, 0, 24)
hopBtn.Position = UDim2.new(0, 5, 0, 52)
hopBtn.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
hopBtn.BorderSizePixel = 0
hopBtn.Text = "🚀 HOP"
hopBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
hopBtn.TextSize = 11
hopBtn.Font = Enum.Font.GothamBold
hopBtn.Parent = mainFrame

local hopCorner = Instance.new("UICorner")
hopCorner.CornerRadius = UDim.new(0, 4)
hopCorner.Parent = hopBtn

local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(0, 90, 0, 24)
statusLabel.Position = UDim2.new(0, 105, 0, 52)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Ready"
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.TextSize = 9
statusLabel.Font = Enum.Font.Gotham
statusLabel.Parent = mainFrame

local isHopping = false

local function copyJobId()
    local jobId = game.JobId
    if jobId and jobId ~= "" then
        setclipboard(jobId)
        statusLabel.Text = "✓ Copied!"
        statusLabel.TextColor3 = Color3.fromRGB(0, 255, 127)
        wait(1.5)
        statusLabel.Text = "Ready"
        statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    end
end

local function clearJobId()
    jobIdInput.Text = ""
    statusLabel.Text = "✓ Cleared"
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    wait(1)
    statusLabel.Text = "Ready"
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
end

local function joinServerByJobId(jobId)
    if jobId and jobId ~= "" then
        statusLabel.Text = "Joining..."
        statusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
        
        pcall(function()
            TeleportService:TeleportToPlaceInstance(game.PlaceId, jobId, player)
        end)
    end
end

local function findAndJoinTenthServer()
    local cursor = ""
    local suitableServers = {}
    
    repeat
        local success, result = pcall(function()
            return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. cursor))
        end)
        
        if success and result then
            for _, server in pairs(result.data) do
                if server.playing and server.playing >= 1 and server.playing <= 2 and server.id ~= game.JobId then
                    table.insert(suitableServers, server)
                    
                    statusLabel.Text = #suitableServers .. "/10"
                    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
                    
                    if #suitableServers >= 10 then
                        local targetServer = suitableServers[10]
                        statusLabel.Text = "Join #10!"
                        statusLabel.TextColor3 = Color3.fromRGB(0, 255, 127)
                        wait(1)
                        
                        pcall(function()
                            TeleportService:TeleportToPlaceInstance(game.PlaceId, targetServer.id, player)
                        end)
                        return true
                    end
                end
            end
            cursor = result.nextPageCursor or ""
        else
            break
        end
    until cursor == ""
    
    if #suitableServers > 0 then
        local targetServer = suitableServers[#suitableServers]
        statusLabel.Text = "Join #" .. #suitableServers
        statusLabel.TextColor3 = Color3.fromRGB(255, 165, 0)
        wait(1)
        
        pcall(function()
            TeleportService:TeleportToPlaceInstance(game.PlaceId, targetServer.id, player)
        end)
        return true
    end
    
    return false
end

local function hopToLowPlayerServer()
    if isHopping then return end
    isHopping = true
    
    statusLabel.Text = "Searching..."
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    
    local found = findAndJoinTenthServer()
    
    if not found then
        statusLabel.Text = "No server!"
        statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
        wait(2)
        statusLabel.Text = "Ready"
        statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    end
    
    isHopping = false
end

copyBtn.MouseButton1Click:Connect(copyJobId)
clearBtn.MouseButton1Click:Connect(clearJobId)
hopBtn.MouseButton1Click:Connect(hopToLowPlayerServer)

jobIdInput.FocusLost:Connect(function(enterPressed)
    if enterPressed or jobIdInput.Text ~= "" then
        local jobId = jobIdInput.Text:gsub("%s+", "")
        if jobId ~= "" then
            joinServerByJobId(jobId)
        end
    end
end)


local dragging = false
local dragStart = nil
local startPos = nil

local function updateInput(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

title.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        if dragging then
            updateInput(input)
        end
    end
end)

spawn(function()
    initBossTracker()
    print("[Elite Hopper] ✓ Boss Tracker đã sẵn sàng!")
end)
